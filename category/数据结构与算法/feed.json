{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my world • All posts by \"数据结构与算法\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/03/07/%E7%BB%AA%E8%AE%BA/",
            "url": "http://example.com/2023/03/07/%E7%BB%AA%E8%AE%BA/",
            "title": "绪论",
            "date_published": "2023-03-07T09:15:42.000Z",
            "content_html": "<h1 id=\"绪论\"><a class=\"markdownIt-Anchor\" href=\"#绪论\">#</a> 绪论</h1>\n<h2 id=\"树状图总结\"><a class=\"markdownIt-Anchor\" href=\"#树状图总结\">#</a> 树状图总结</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\"> </span><br><span class=\"line\">A[绪论] --&gt;B(数据结构)--&gt;C(逻辑结构)--&gt;a(线性结构)--&gt;d&#123;线性表&#125;</span><br><span class=\"line\">a--&gt;q&#123;栈和队列&#125; </span><br><span class=\"line\">a--&gt;w&#123;字符串&#125;</span><br><span class=\"line\">C--&gt;b(非线性结构)--&gt;e&#123;树状图&#125;</span><br><span class=\"line\">b--&gt;r&#123;图结构&#125;</span><br><span class=\"line\">B--&gt;D(存储结构)--&gt;t&#123;顺序存储结构&#125;</span><br><span class=\"line\">D--&gt;y&#123;链式存储结构&#125;</span><br><span class=\"line\">A[绪论] --&gt;c(算法)--&gt;u(定义)</span><br><span class=\"line\">  c--&gt;o(特性)</span><br><span class=\"line\">  c--&gt;p(评价标准)</span><br><span class=\"line\">  c--&gt;s(效率度量)--&gt;f&#123;时间复杂度&#125;</span><br><span class=\"line\">  s--&gt;g&#123;空间复杂度&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure>\n<h2 id=\"在这一章中主要介绍了数据结构的基本概念和术语以及算法和算法时间复杂度的分析方法\"><a class=\"markdownIt-Anchor\" href=\"#在这一章中主要介绍了数据结构的基本概念和术语以及算法和算法时间复杂度的分析方法\">#</a> 在这一章中主要介绍了数据结构的基本概念和术语，以及算法和算法时间复杂度的分析方法。</h2>\n<ul>\n<li>\n<p>数据结构是一门研究非数值计算程序设计中操作对象，以及这些对象之间的关系和操作对象，以及这些对象之间的关系和操作的学科。</p>\n</li>\n<li>\n<p>数据结构包括两个方面的内容：数据的逻辑结构和存储结构。同一逻辑结构采用不同的储存方法，可以得到不同的存储结构</p>\n<ol>\n<li>逻辑结构是从具体问题抽象出来的数学模型，从逻辑关系上描述数据，它与数据的存储无关。根据数据元素之间关系的不同特性，通常有四类基本逻辑结构：集合结构，线性结构，树形结构和图状结构。</li>\n<li>存储结构是逻辑结构在计算机中的存储表示，有两类存储结构：顺序粗出结构和链式存储结构。</li>\n</ol>\n</li>\n<li>\n<p>抽象数据类型是指由用户定义的，表示应用问题的数学模型，以及定义在这个模型上的一组操作的总称，具体包括三部分：数据对象，数据对象上关系的集合，以及对数据对象的基本操作的集合。</p>\n</li>\n<li>\n<p>算法是为了解决某类问题而规定的一个有限长的操作数列。算法具有四个特性：正确性，可读性，健壮性和高效性。</p>\n</li>\n<li>\n<p>算法分析的两个主要方面是分析算法的时间发杂度和空间复杂度，以考察算法的时间和空间效率。一般情况下，鉴于运算空间较为充足，故将算法的时间复杂度作为分析的重点。算法执行时间的数量级称为算法的渐近时间复杂度，T (n)=O (f (n))，它表示随着问题 n 的增大，算法执行时间的增长率和 f (n) 的增长率相同，简称时间复杂度。</p>\n</li>\n</ul>\n<h3 id=\"这一章的知识点并不多我着重讲一下时间复杂度的相关知识\"><a class=\"markdownIt-Anchor\" href=\"#这一章的知识点并不多我着重讲一下时间复杂度的相关知识\">#</a> 这一章的知识点并不多，我着重讲一下时间复杂度的相关知识</h3>\n<p>在描述算法复杂度时，经常用到 O (1) , O ( n ) , O ( l o g n ) , O ( n l o g n ) 来表示对应复杂度程度，不过目前大家默认也通过这几个方式表示<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTclQTklQkElRTklOTclQjQlRTUlQTQlOEQlRTYlOUQlODIlRTUlQkElQTYmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">空间复杂度</span> 。</p>\n<p>那么，O (1) , O ( n ) , O ( l o g n ) , O ( n l o g n ) 就可以看作既可表示算法复杂度，也可以表示空间复杂度。</p>\n<p>大 O 加上（）的形式，里面其实包裹的是一个函数 f () , O （ f () ） f (),O（f ()）f (),O（f ()）, 指明某个算法的耗时 / 耗空间与数据增长量之间的关系。其中的 n  代表输入数据的量。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200415110541459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTY5Nzc3NA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>如果 ax=N（a&gt;0，且 a≠1），那么数 x 叫做以 a 为底 N 的对数，记作 x=logaN，读作以 a 为底 N 的对数，其中 a 叫做对数的底数，N 叫做真数。</p>\n</blockquote>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200415110548576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTY5Nzc3NA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n比如线段树复杂度 O (l o g n + n) ，查询修改都是 O ( l o g n ) <strong>刚学的时候简直惊为天人</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=i;++j)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k=<span class=\"number\">1</span>;k&lt;=j;++k)</span><br><span class=\"line\">                x=x+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"number\">1234</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTYlOTclQjYlRTklOTclQjQlRTUlQTQlOEQlRTYlOUQlODIlRTUlQkElQTYmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">时间复杂度</span>是 O (n^3)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;=n)</span><br><span class=\"line\">        i*=<span class=\"number\">2</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"number\">1234</span></span><br></pre></td></tr></table></figure>\n<p>时间复杂度 O (l o g 2 n)−&gt;O ( l o g n )<br>\n 评测机一般能过 10<sup>8~10</sup>9 ，根据评测机的性能以及程序的常数而定</p>\n",
            "tags": [
                "知识点总结"
            ]
        }
    ]
}