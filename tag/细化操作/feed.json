{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my world • All posts by \"细化操作\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/03/07/typora%E7%94%A8%E6%B3%95%E5%86%8D%E6%B7%B1%E5%8C%96/",
            "url": "http://example.com/2023/03/07/typora%E7%94%A8%E6%B3%95%E5%86%8D%E6%B7%B1%E5%8C%96/",
            "title": "typora用法再深化",
            "date_published": "2023-03-07T09:40:11.000Z",
            "content_html": "<blockquote>\n<p>本文旨在分享使用Typora做笔记的一些心得</p>\n</blockquote>\n<p>一、介绍</p>\n<ol>\n<li><p>为什么要用Typora</p>\n<ul>\n<li>作为一个程序员,在学习过程中打交道的不单单是文字,还有各种语言的代码块和公式,以及一些简单的流程图和思维导图(就目前而言),就其内容的复杂性而言,远远不是一个word文档就可以解决的.此外,更重要的是,我们往往还需要对笔记进行编辑以发布到个人的博客上(这样有助于在需要时查阅).可以看到,在许多博客都提供了md(Markdown语言)以方便我们进行编辑.然而,纵观大部分的网页版md编辑器,编辑与视图都是分离的——即需要在编辑完之后切换窗口以进行查看语法是否有误(这种情况在编辑公式时更是尤为明显).</li>\n<li>而typora则稍不同,作为一款支持<strong>实时</strong>预览的Markdown文本编辑器,则近乎完全避免了因为频繁切屏或语法错误造成的时间效率的影响.同时它还支持图片的上传(这有一点我们将在之后着重提及)以及格式的转换(将在之后提及),可以将.md后缀的文件转换为pdf,docx等格式的文档.更重要的是,它是完全免费的!</li>\n</ul>\n</li>\n<li><p>上传博客</p>\n<p> 由于使用Typora本身写下的便是md格式的文本,在上传博客时我们只需要直接复制内容粘贴到博客上的即可(Typora会默认粘贴md格式的原文),或者进入源码模式再粘贴也可.这里需要注意的是图片的处理——由于md语法中记录的是图片的位置,这样一来在博客上的图片显然是无效的,以下是三种解决方法:</p>\n<ul>\n<li>选择图片手动上传</li>\n<li>将需要上传的图片<strong>截图</strong>,然后复制到对应的位置</li>\n<li>图床:以上两种都需要对每张图片进行单独的操作,而图床只需要一次操作即可,在后面我们会讲解操作</li>\n</ul>\n<p> 注:合理地切换Typora的<strong>源码模式</strong>可能会给我们的排版带来一些出其不意的效果</p>\n</li>\n</ol>\n<p>二、MarkDown语法</p>\n<blockquote>\n<p>这里主要介绍一些Typora中常规易用的md语法</p>\n</blockquote>\n<ol>\n<li><p>表意语法</p>\n<ul>\n<li><code>#</code>:一级标题</li>\n<li><code>######</code>:六级标题</li>\n<li><code>1.</code>: 有序列表</li>\n<li><code>*</code>:无序列表</li>\n</ul>\n<p> 注:</p>\n<ul>\n<li><p>标记必须<strong>相对顶格</strong>(标记前没有字符),后面必须接一个<strong>空格</strong></p>\n</li>\n<li><p>在列表的头部键入<code>Backspace</code>即可<strong>删除</strong>前置的标记</p>\n</li>\n<li><p>在列表的结束键入<code>Enter</code>即可<strong>添加</strong>下一个阶段的标记</p>\n<p>  如:有了1开头的列表,回车即可获得2开头的列表(无序列表则生成与上一阶段相同的标记)</p>\n</li>\n<li><p>在使用以上语法时,熟悉<code>Enter</code>和<code>Backspace</code>键可以给你带来<strong>极大</strong>的方便</p>\n</li>\n</ul>\n</li>\n<li><p>字体语法</p>\n<ul>\n<li><code>*斜体*</code>:<em>斜体</em></li>\n<li><code>**加粗**</code>:<strong>加粗</strong></li>\n<li><code>~~删除线~~</code>:删除线</li>\n<li><code>[链接](www.baidu.com)</code>:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vQXJuby12Yy9wL3d3dy5iYWlkdS5jb20=\">链接</span></li>\n</ul>\n<p> 在这里使用快捷键可以在一定程度上提高效率:</p>\n<ul>\n<li><code>ctrl + k</code>:先<strong>复制</strong>一个<strong>链接</strong>,然后选中要放上链接的文字或者图片然后使用快捷键</li>\n<li><code>ctrl + b</code>:选中文字,使用快捷键</li>\n</ul>\n</li>\n<li><p>引用及代码块添加</p>\n<ul>\n<li><p><code>&gt; 引用</code>:</p>\n<blockquote>\n<p>引用 (需顶格)</p>\n</blockquote>\n</li>\n<li><p><code>行内代码块</code>:<code>行内代码块</code>(sadly,这边的演示无法再直接用”&#96;”包裹)</p>\n</li>\n<li><p>`&#96;&#96;java</p>\n<p>  代码块</p>\n<p>  `&#96;&#96;</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码块</span><br></pre></td></tr></table></figure>\n\n<p>  注: 代码块是可以选择相应的语言的</p>\n</li>\n</ul>\n</li>\n<li><p>其它</p>\n<blockquote>\n<p>之所以要分出其它一类在于我认为某些情况下使用md语法是费力不讨好的事,这样的事应该大多交给Typora的快捷来完成</p>\n</blockquote>\n<ul>\n<li><p>表格:表格的排版是比较麻烦的,这里建议直接使用Typora的工具生成和调整</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">1</th>\n<th align=\"left\">1</th>\n<th align=\"left\">1</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>图片:使用截图后<strong>粘贴</strong>或者直接将图片<strong>导入</strong></p>\n</li>\n</ul>\n</li>\n</ol>\n<p>注:以上的内容稍微参考了一下简书里的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xOTFkMWUyMWY3ZWQv\">一篇文章</span></p>\n<p>四、LateX公式</p>\n<blockquote>\n<p>查阅了一定的资料,发现LateX也是一种标记语言,但更多地应用于论文的编排.这里我们主要介绍在Typora中如何使用LateX的公式(或者说是md中整合的LateX公式的基本用法),介绍的重点在于上标,下标以及一些特殊表达式的使用</p>\n</blockquote>\n<ol>\n<li><p>准备工作</p>\n<p> 打开Typoa和LateX公式相关的设置,进入<code>File -&gt; Preference -&gt; MarkDown</code>,勾选以下内容:</p>\n<ul>\n<li>Inline Math:行内数学公式</li>\n<li>Subscript:下标</li>\n<li>Superscript:上标</li>\n</ul>\n</li>\n<li><p>Typora中公式引入的两种方式</p>\n<ul>\n<li><p>行内公式:<code>$公式$</code></p>\n</li>\n<li><p>块级公式:</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">公式</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>下标</p>\n<ul>\n<li><p>单下标</p>\n<p>  <code>$a_1$</code>:a1�1</p>\n</li>\n<li><p>多下标:使用**{}**包裹即可</p>\n<p>  <code>$a_&#123;b1&#125;$</code>:ab1��1</p>\n</li>\n</ul>\n</li>\n<li><p>上标</p>\n<ul>\n<li><p>单上标</p>\n<p>  <code>$a^1$</code>:a1�1</p>\n</li>\n<li><p>多上标:使用{}包裹即可</p>\n<p>  <code>$a^&#123;b1&#125;$</code>:ab1��1</p>\n</li>\n</ul>\n</li>\n<li><p>特殊表达式</p>\n<blockquote>\n<p>LateX对于公式的支持是比较完整的,既包括了加减乘除,分数开根等一些简单的运算公式,也包括了积分,向量,求极限等复杂的运算公式.这里主要介绍一些常用的函数以及符号标记,如果要查阅更完整的内容可以参考网上的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vMTAyNHRoL3AvMTE2MjMyNTguaHRtbA==\">相关博客</span></p>\n</blockquote>\n<ul>\n<li><p>常用表达式</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">表达式</th>\n<th align=\"left\">显示</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>\\frac&#123;分子&#125;&#123;分母&#125;</code></td>\n<td align=\"left\">分子分母分子分母</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\sum_&#123;下标&#125;^&#123;上标&#125;&#123;表达式&#125;</code></td>\n<td align=\"left\">∑上标下标表达式∑下标上标表达式</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\prod_&#123;下标&#125;^&#123;上标&#125;&#123;表达式&#125;</code></td>\n<td align=\"left\">∏上标下标表达式∏下标上标表达式</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>特殊字母</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">表达式</th>\n<th align=\"left\">显示</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>\\alpha</code></td>\n<td align=\"left\">α�</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\beta</code></td>\n<td align=\"left\">β�</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\mu</code></td>\n<td align=\"left\">μ�</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\pi</code></td>\n<td align=\"left\">π�</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\varphi</code></td>\n<td align=\"left\">φ�</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>通过对以上内容的拼接,即可完成一些基本的表达式的书写,<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9ibG9nL2NvbnRlbnQvMTcyNy8=\">https://www.acwing.com/blog/content/1727/</span></p>\n</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"五、Typora\"><a href=\"#五、Typora\" class=\"headerlink\" title=\"五、Typora\"></a>五、Typora</h5><blockquote>\n<p>聊完了md,lateX公式等前置的信息,我们可以正式开始聊聊Typora了</p>\n</blockquote>\n<ol>\n<li><p>下载</p>\n<p> 官网:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHlwb3JhLmlvLw==\">https://www.typora.io/</span></p>\n<p> 价格:免费</p>\n<p> 支持平台:windows,linux,os</p>\n<p> 注:由于服务器在境外,下载比较慢,这里提供一个百度云的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXVIUC1adkJVRHFGSzFzcE9jYi05NWc=\">下载链接</span>,提取码:3399,于2020.7下载,如果官网下载不了的朋友可以自行下载领取.</p>\n</li>\n<li><p>定制Typora</p>\n<blockquote>\n<p>下载好Typora,熟悉了md语法以及Latex公式,您应该能够初步地使用这个程序了.但是为了更好地使用它,对它进行定制,我们还应该稍微了解一下它的实现原理</p>\n</blockquote>\n<ul>\n<li><p>倘若你有一定的前端开发经验,那么当你打开视图的<strong>开发者工具</strong>(事实上,许多人看到这个词估计心里就有数了),可能会惊讶地发现Typora原来是个<strong>浏览器</strong>!而且根据这个调试工具的风格还能更近一步地猜想到是基于Chrome的浏览器内核开发的.</p>\n</li>\n<li><p>事实上,也的确是如此的.Typora正是使用了electron框架进行开发的.而electron是一个基于Chromium 和 Node.js,帮助我们使用 JavaScript，HTML 和 CSS 构建<strong>跨平台的桌面应用程序</strong>(也就是我们下载的桌面应用,如Typora)的框架.</p>\n</li>\n<li><p>既然Typora可以看做是浏览器,那么可以想见Typora实际所做的工作也就是将我们写下的内容翻译成html+css,然后用浏览器将其渲染出来.那么我们要如何定制自己的Typora呢?答案不言而喻,只需修改一下对应的css即可.打开<code>偏好设置-&gt;外观-&gt;打开主题文件夹</code>,在主题文件夹下有多个css文件,查看Typora上方的主题栏便可知晓当前使用的主题(默认为github).</p>\n<p>  (1).查看原文件:(这里以一个5级标题为例)</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h5 &#123;</span><br><span class=\"line\">    font-size: 1em;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>  (2).尝试修改文件:</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h5 &#123;</span><br><span class=\"line\">    font-size: 2em;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>  (3).重启,可以看到对应的标题字体的确变大了</p>\n<p>  有喜欢整一些花里胡哨东西的朋友可以开始搞起来了!</p>\n</li>\n<li><p>补充:这样的css调整不仅能在本地使用,还可以将对应的css放到<strong>博客</strong>上设置使用</p>\n</li>\n<li><p>相关文档:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0LnR5cG9yYS5pby9BYm91dC1UaGVtZXMv\">https://support.typora.io/About-Themes/</span></p>\n</li>\n</ul>\n</li>\n</ol>\n<p>六、图床</p>\n<ol>\n<li><p>当我们在本地使用图片时,实际上对应的是该图片在本地的地址(如果是截图,在复制过后会自动在本地产生一个地址).这种情况在本地使用是无妨的,但是当我们想要将对应的md原码直接放到bolg上就出现问题了,因为赋值过去的<strong>图片链接</strong>是错误,为此我们需要对每张图片一一进行操作,显然这就带来极大的不便.</p>\n<p> <a href=\"http://arnovc.oss-cn-beijing.aliyuncs.com/img/image-20201006150341344.png\"><img data-src=\"http://arnovc.oss-cn-beijing.aliyuncs.com/img/image-20201006150341344.png\" alt=\"image-20201006150341344\"></a></p>\n</li>\n<li><p>解决的方法之一便是图床.所谓图床就是储存图片的服务器.具体工作原理见下图,相信大家可以很容易地理解其工作原理,而在Typora内部也有与之相对应的设置.</p>\n<p> <a href=\"http://arnovc.oss-cn-beijing.aliyuncs.com/img/image-20201006150241673.png\"><img data-src=\"http://arnovc.oss-cn-beijing.aliyuncs.com/img/image-20201006150241673.png\" alt=\"image-20201006150241673\"></a></p>\n<p> 图床使用方法贴知乎链接:<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMzczMTAzMTQ=\">https://zhuanlan.zhihu.com/p/137310314</span> (具体的操作在评论区的置顶)</p>\n<p> 注:如果大家使用的是阿里云的图床,最后即使有报错可能也<strong>不影响</strong>实际的使用,但需要在<strong>服务器的文件夹</strong>中确认相关的图片已经上传了</p>\n</li>\n</ol>\n<p>七、转换文本格式</p>\n<p>虽然有许多网站支持.md文件,如简书,博客,github等,但大多局限于程序员的圈子,如果要对外发布通常还需要转换为PDF或者word等格式.为此,我们在选择<code>文件 -&gt; 导出 -&gt;PDF</code>时只需要依照提示安装一下Pandoc工具即可非常便捷地完成格式转换</p>\n<p>注:PDF格式与css<strong>相关</strong>,.docx格式与css<strong>无关</strong></p>\n<p>八、使用ProcessOn进行绘图</p>\n<p>也许你会感到很神奇:md语言是可以绘图的!但就个人而言我无法想象复杂的流程图的绘制要如何通过md语言完成.为此,在这里我推荐使用<strong>免费</strong>的ProcessOn网站进行流程图,思维导图的绘制(就如以上完成的两张图),之后截图,复制即可.</p>\n<p>本文作者<strong>：</strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vQXJuby12Yy9wLzEzNzczNTE1Lmh0bWw=\">Arno</span></p>\n<p>本文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vQXJuby12Yy9wLzEzNzczNTE1Lmh0bWw=\">https://www.cnblogs.com/Arno-vc/p/13773515.html</span></p>\n",
            "tags": [
                "细化操作"
            ]
        }
    ]
}