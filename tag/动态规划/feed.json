{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my world • All posts by \"动态规划\" tag",
    "description": "",
    "home_page_url": "https://chulianyuang.github.io",
    "items": [
        {
            "id": "https://chulianyuang.github.io/2023/03/15/%E5%8A%9B%E6%89%A3%E9%A2%98%E5%9E%8B%E8%AF%95%E6%B0%B4/",
            "url": "https://chulianyuang.github.io/2023/03/15/%E5%8A%9B%E6%89%A3%E9%A2%98%E5%9E%8B%E8%AF%95%E6%B0%B4/",
            "title": "力扣题型试水",
            "date_published": "2023-03-15T08:22:22.000Z",
            "content_html": "<h1 id=\"279-完全平方数\"><a href=\"#279-完全平方数\" class=\"headerlink\" title=\"[279. 完全平方数]\"></a>[279. 完全平方数]</h1><p>给你一个整数 <code>n</code> ，返回 <em>和为 <code>n</code> 的完全平方数的最少数量</em> 。</p>\n<p><strong>完全平方数</strong> 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。例如，<code>1</code>、<code>4</code>、<code>9</code> 和 <code>16</code> 都是完全平方数，而 <code>3</code> 和 <code>11</code> 不是。</p>\n<p><strong>示例 1：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：n = 12</span><br><span class=\"line\">输出：3 </span><br><span class=\"line\">解释：12 = 4 + 4 + 4</span><br></pre></td></tr></table></figure>\n\n<p><strong>示例 2：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：n = 13</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：13 = 4 + 9</span><br></pre></td></tr></table></figure>\n\n\n\n<p>可能刚看这种题感觉没啥思路，又平方和的，又最小数的。</p>\n<p><strong>我来把题目翻译一下：完全平方数就是物品（可以无限件使用），凑个正整数n就是背包，问凑满这个背包最少有多少物品？</strong></p>\n<p>感受出来了没，这么浓厚的完全背包氛围，而且和昨天的题目<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9saW5rLz90YXJnZXQ9aHR0cHM6Ly9wcm9ncmFtbWVyY2FybC5jb20vMDMyMi4lRTklOUIlQjYlRTklOTIlQjElRTUlODUlOTElRTYlOEQlQTIuaHRtbA==\">动态规划：322. 零钱兑换</span>就是一样一样的！</p>\n<p>动规五部曲分析如下：</p>\n<ol>\n<li>确定dp数组（dp table）以及下标的含义</li>\n</ol>\n<p><strong>dp[j]：和为j的完全平方数的最少数量为dp[j]</strong></p>\n<ol>\n<li>确定递推公式</li>\n</ol>\n<p>dp[j] 可以由dp[j - i * i]推出， dp[j - i * i] + 1 便可以凑成dp[j]。</p>\n<p>此时我们要选择最小的dp[j]，所以递推公式：dp[j] &#x3D; min(dp[j - i * i] + 1, dp[j]);</p>\n<ol>\n<li>dp数组如何初始化</li>\n</ol>\n<p>dp[0]表示 和为0的完全平方数的最小数量，那么dp[0]一定是0。</p>\n<p>有同学问题，那0 * 0 也算是一种啊，为啥dp[0] 就是 0呢？</p>\n<p>看题目描述，找到若干个完全平方数（比如 1, 4, 9, 16, …），题目描述中可没说要从0开始，dp[0]&#x3D;0完全是为了递推公式。</p>\n<p>非0下标的dp[j]应该是多少呢？</p>\n<p>从递归公式dp[j] &#x3D; min(dp[j - i * i] + 1, dp[j]);中可以看出每次dp[j]都要选最小的，<strong>所以非0下标的dp[j]一定要初始为最大值，这样dp[j]在递推的时候才不会被初始值覆盖</strong>。</p>\n<ol>\n<li>确定遍历顺序</li>\n</ol>\n<p>我们知道这是完全背包，</p>\n<p>如果求组合数就是外层for循环遍历物品，内层for遍历背包。</p>\n<p>如果求排列数就是外层for遍历背包，内层for循环遍历物品。</p>\n<p>在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9saW5rLz90YXJnZXQ9aHR0cHM6Ly9wcm9ncmFtbWVyY2FybC5jb20vMDMyMi4lRTklOUIlQjYlRTklOTIlQjElRTUlODUlOTElRTYlOEQlQTIuaHRtbA==\">动态规划：322. 零钱兑换</span>中我们就深入探讨了这个问题，本题也是一样的，是求最小数！</p>\n<p><strong>所以本题外层for遍历背包，内层for遍历物品，还是外层for遍历物品，内层for遍历背包，都是可以的！</strong></p>\n<p>我这里先给出外层遍历背包，内层遍历物品的代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dp</span><span class=\"params\">(n + <span class=\"number\">1</span>, INT_MAX)</span></span>;</span><br><span class=\"line\">dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= n; i++) &#123; <span class=\"comment\">// 遍历背包</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j * j &lt;= i; j++) &#123; <span class=\"comment\">// 遍历物品</span></span><br><span class=\"line\">        dp[i] = <span class=\"built_in\">min</span>(dp[i - j * j] + <span class=\"number\">1</span>, dp[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>举例推导dp数组</li>\n</ol>\n<p>已输入n为5例，dp状态图如下：</p>\n<p><img data-src=\"https://pic.leetcode.cn/1675398054-kehJBP-image.png\" alt=\"image.png\"></p>\n<p>dp[0] &#x3D; 0</p>\n<p> dp[1] &#x3D; min(dp[0] + 1) &#x3D; 1</p>\n<p> dp[2] &#x3D; min(dp[1] + 1) &#x3D; 2</p>\n<p> dp[3] &#x3D; min(dp[2] + 1) &#x3D; 3 </p>\n<p> dp[4] &#x3D; min(dp[3] + 1, dp[0] + 1) &#x3D; 1</p>\n<p> dp[5] &#x3D; min(dp[4] + 1, dp[1] + 1) &#x3D; 2</p>\n<p>最后的dp[n]为最终结果。</p>\n<h2 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C++代码\"></a>C++代码</h2><p>以上动规五部曲分析完毕C++代码如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 版本一</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">numSquares</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dp</span><span class=\"params\">(n + <span class=\"number\">1</span>, INT_MAX)</span></span>;</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= n; i++) &#123; <span class=\"comment\">// 遍历背包</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j * j &lt;= i; j++) &#123; <span class=\"comment\">// 遍历物品</span></span><br><span class=\"line\">                dp[i] = <span class=\"built_in\">min</span>(dp[i - j * j] + <span class=\"number\">1</span>, dp[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>同样我在给出先遍历物品，在遍历背包的代码，一样的可以AC的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 版本二</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">numSquares</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dp</span><span class=\"params\">(n + <span class=\"number\">1</span>, INT_MAX)</span></span>;</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i * i &lt;= n; i++) &#123; <span class=\"comment\">// 遍历物品</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i * i; j &lt;= n; j++) &#123; <span class=\"comment\">// 遍历背包</span></span><br><span class=\"line\">                dp[j] = <span class=\"built_in\">min</span>(dp[j - i * i] + <span class=\"number\">1</span>, dp[j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>如果大家认真做了昨天的题目<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9saW5rLz90YXJnZXQ9aHR0cHM6Ly9wcm9ncmFtbWVyY2FybC5jb20vMDMyMi4lRTklOUIlQjYlRTklOTIlQjElRTUlODUlOTElRTYlOEQlQTIuaHRtbA==\">动态规划：322. 零钱兑换</span>，今天这道就非常简单了，一样的套路一样的味道。</p>\n<p>但如果没有按照「代码随想录」的题目顺序来做的话，做动态规划或者做背包问题，上来就做这道题，那还是挺难的！</p>\n<p>经过前面的训练这道题已经是简单题了，哈哈哈</p>\n<p>## 其他语言版本</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 版本一，先遍历物品, 再遍历背包</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">numSquares</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> Integer.MAX_VALUE;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"comment\">//初始化</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            dp[j] = max;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//当和为0时，组合的个数为0</span></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 遍历物品</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 遍历背包</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> i * i; j &lt;= n; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (dp[j - i * i] != max) &#123;</span><br><span class=\"line\">                    dp[j] = Math.min(dp[j], dp[j - i * i] + <span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 版本二， 先遍历背包, 再遍历物品</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">numSquares</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> Integer.MAX_VALUE;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"comment\">// 初始化</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            dp[j] = max;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 当和为0时，组合的个数为0</span></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 遍历背包</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 遍历物品</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i * i &lt;= j; i++) &#123;</span><br><span class=\"line\">                dp[j] = Math.min(dp[j], dp[j - i * i] + <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    def <span class=\"title function_\">numSquares</span><span class=\"params\">(self, n: <span class=\"type\">int</span>)</span> -&gt; <span class=\"type\">int</span>:</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">&#x27;版本一，先遍历背包, 再遍历物品&#x27;</span><span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        # 初始化</span><br><span class=\"line\">        nums = [i**<span class=\"number\">2</span> <span class=\"keyword\">for</span> i in <span class=\"title function_\">range</span><span class=\"params\">(<span class=\"number\">1</span>, n + <span class=\"number\">1</span>)</span> <span class=\"keyword\">if</span> i**<span class=\"number\">2</span> &lt;= n]</span><br><span class=\"line\">        dp = [<span class=\"number\">10</span>**<span class=\"number\">4</span>]*(n + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">        # 遍历背包</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j in <span class=\"title function_\">range</span><span class=\"params\">(<span class=\"number\">1</span>, n + <span class=\"number\">1</span>)</span>:</span><br><span class=\"line\">            # 遍历物品</span><br><span class=\"line\">            <span class=\"keyword\">for</span> num in nums:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> j &gt;= num:</span><br><span class=\"line\">                    dp[j] = min(dp[j], dp[j - num] + <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n]</span><br><span class=\"line\">    </span><br><span class=\"line\">    def <span class=\"title function_\">numSquares1</span><span class=\"params\">(self, n: <span class=\"type\">int</span>)</span> -&gt; <span class=\"type\">int</span>:</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">&#x27;版本二， 先遍历物品, 再遍历背包&#x27;</span><span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        # 初始化</span><br><span class=\"line\">        nums = [i**<span class=\"number\">2</span> <span class=\"keyword\">for</span> i in <span class=\"title function_\">range</span><span class=\"params\">(<span class=\"number\">1</span>, n + <span class=\"number\">1</span>)</span> <span class=\"keyword\">if</span> i**<span class=\"number\">2</span> &lt;= n]</span><br><span class=\"line\">        dp = [<span class=\"number\">10</span>**<span class=\"number\">4</span>]*(n + <span class=\"number\">1</span>)</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">        # 遍历物品</span><br><span class=\"line\">        <span class=\"keyword\">for</span> num in nums:</span><br><span class=\"line\">            # 遍历背包</span><br><span class=\"line\">            <span class=\"keyword\">for</span> j in <span class=\"title function_\">range</span><span class=\"params\">(num, n + <span class=\"number\">1</span>)</span>:</span><br><span class=\"line\">                dp[j] = min(dp[j], dp[j - num] + <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n]</span><br><span class=\"line\"><span class=\"comment\">// 版本一,先遍历物品, 再遍历背包</span></span><br><span class=\"line\">func <span class=\"title function_\">numSquares1</span><span class=\"params\">(n <span class=\"type\">int</span>)</span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义</span></span><br><span class=\"line\">\tdp := make([]<span class=\"type\">int</span>, n+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化</span></span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tdp[i] = math.MaxInt32</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 遍历物品</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 遍历背包</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i*i; j &lt;= n; j++ &#123;</span><br><span class=\"line\">\t\t\tdp[j] = min(dp[j], dp[j-i*i]+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dp[n]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 版本二,先遍历背包, 再遍历物品</span></span><br><span class=\"line\">func <span class=\"title function_\">numSquares2</span><span class=\"params\">(n <span class=\"type\">int</span>)</span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义</span></span><br><span class=\"line\">\tdp := make([]<span class=\"type\">int</span>, n+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化</span></span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"comment\">// 遍历背包</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j := <span class=\"number\">1</span>; j &lt;= n; j++ &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//初始化</span></span><br><span class=\"line\">\t\tdp[j] = math.MaxInt32</span><br><span class=\"line\">\t\t<span class=\"comment\">// 遍历物品</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= i*i &#123;</span><br><span class=\"line\">\t\t\t\tdp[j] = min(dp[j], dp[j-i*i]+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dp[n]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func <span class=\"title function_\">min</span><span class=\"params\">(a, b <span class=\"type\">int</span>)</span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> a &lt; b &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 先遍历物品，再遍历背包</span></span><br><span class=\"line\"><span class=\"type\">var</span> <span class=\"variable\">numSquares1</span> <span class=\"operator\">=</span> function(n) &#123;</span><br><span class=\"line\">    <span class=\"type\">let</span> <span class=\"variable\">dp</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n + <span class=\"number\">1</span>).fill(Infinity)</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">let</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i**<span class=\"number\">2</span> &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">let</span> <span class=\"variable\">val</span> <span class=\"operator\">=</span> i**<span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">let</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> val; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            dp[j] = Math.min(dp[j], dp[j - val] + <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 先遍历背包，再遍历物品</span></span><br><span class=\"line\"><span class=\"type\">var</span> <span class=\"variable\">numSquares2</span> <span class=\"operator\">=</span> function(n) &#123;</span><br><span class=\"line\">    <span class=\"type\">let</span> <span class=\"variable\">dp</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n + <span class=\"number\">1</span>).fill(Infinity)</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">let</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">let</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j * j &lt;= i; j++) &#123;</span><br><span class=\"line\">            dp[i] = Math.min(dp[i - j * j] + <span class=\"number\">1</span>, dp[i])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">function <span class=\"title function_\">numSquares</span><span class=\"params\">(n: number)</span>: number &#123;</span><br><span class=\"line\">    const goodsNum: number = Math.floor(Math.sqrt(n));</span><br><span class=\"line\">    const dp: number[] = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n + <span class=\"number\">1</span>).fill(Infinity);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">let</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= goodsNum; i++) &#123;</span><br><span class=\"line\">        const tempVal: number = i * i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">let</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> tempVal; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            dp[j] = Math.min(dp[j], dp[j - tempVal] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "动态规划"
            ]
        }
    ]
}