{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my world • All posts by \"c语言指针复习\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/02/04/%E6%8C%87%E5%90%91%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F/",
            "url": "http://example.com/2023/02/04/%E6%8C%87%E5%90%91%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F/",
            "title": "指向一维数组的指针变量",
            "date_published": "2023-02-04T09:01:06.000Z",
            "content_html": "<h2 id=\"指向一维数组的指针变量定义\"><a class=\"markdownIt-Anchor\" href=\"#指向一维数组的指针变量定义\">#</a> 指向一维数组的指针变量定义：</h2>\n<p>如果定义一个指针变量，使其指向一个一维数组的首地址，或指向某个数组元素的地址，则称该指针变量为指向一维数组的指针变量。<br>\n代码实例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>],*p;<span class=\"comment\">//首先对他们的类型做一个定义</span></span><br><span class=\"line\">    p=a;</span><br><span class=\"line\">    p=&amp;a[<span class=\"number\">0</span>];<span class=\"comment\">//这两种规定都是符合的。</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>以上这个是指向数组的首地址输出的都只是 a [0] 的值。<br>\n对于上面所写 &amp; a [i] 的表示形式，由于数组元素访问运算符 [] 的优先级更高，所以这里不必写成 &amp;(a [i]) 点形式。<br>\n<strong>插入优先级排序：由高到低为：！，算术运算符，关系运算符，&amp;&amp;，||，赋值运算符。</strong></p>\n<h2 id=\"可以得到数组元素ai地址的方式有四种-接下来我就只会用代码来介绍常用的三种\"><a class=\"markdownIt-Anchor\" href=\"#可以得到数组元素ai地址的方式有四种-接下来我就只会用代码来介绍常用的三种\">#</a> 可以得到数组元素 a [i] 地址的方式有四种 接下来，我就只会用代码来介绍常用的三种。</h2>\n<h3 id=\"第一种是通过数组的下标来引用数组元素这也是我们之前学数组时一直用的方法这里就不过多介绍了如下所示\"><a class=\"markdownIt-Anchor\" href=\"#第一种是通过数组的下标来引用数组元素这也是我们之前学数组时一直用的方法这里就不过多介绍了如下所示\">#</a> ‌第一种是通过数组的下标来引用数组元素，这也是我们之前学数组时一直用的方法，这里就不过多介绍了，如下所示：</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%5d&quot;</span>,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二种是可以通过数组名来访问数组元素-例如-ai与ai等价\"><a class=\"markdownIt-Anchor\" href=\"#第二种是可以通过数组名来访问数组元素-例如-ai与ai等价\">#</a> ‌第二种是可以通过数组名来访问数组元素。例如：* (a+i) 与 a [i] 等价。</h3>\n<p><strong>注意：使用数组名时，不能用 a++ 的方式，因为在这里的 a 是地址常量，而常量不能被重新赋值。</strong><br>\n实例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%5d&quot;</span>,*(a+i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"第三种如果定义了指针变量pint-p并使p指向数组a的首地址即pa则可以用指针变量来访问数组元素元素p0即与a0等价~~~~pi与ai等价\"><a class=\"markdownIt-Anchor\" href=\"#第三种如果定义了指针变量pint-p并使p指向数组a的首地址即pa则可以用指针变量来访问数组元素元素p0即与a0等价~~~~pi与ai等价\">#</a> ‌第三种，如果定义了指针变量 p (int p;), 并使 p 指向数组 a 的首地址 (即 p=a), 则可以用指针变量来访问数组元素元素，(p+0)(即 §) 与 a [0] 等价～～～～(p+i) 与 a [i] 等价。</h3>\n<p>实例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> *p; p=a;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%5d&quot;</span>,*(p+i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"例题使用指向数组的指针变量计算数组元素的平均值\"><a class=\"markdownIt-Anchor\" href=\"#例题使用指向数组的指针变量计算数组元素的平均值\">#</a> 例题，使用指向数组的指针变量，计算数组元素的平均值。</h2>\n<h3 id=\"提示定义数组和指针变量后让指针变量指向数组循环求和\"><a class=\"markdownIt-Anchor\" href=\"#提示定义数组和指针变量后让指针变量指向数组循环求和\">#</a> 提示：定义数组和指针变量后，让指针变量指向数组，循环求和。</h3>\n<p>代码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>],*p,k;</span><br><span class=\"line\">    <span class=\"type\">float</span> aver=<span class=\"number\">0</span>;</span><br><span class=\"line\">    p=a;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">10</span>;k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,p+k); <span class=\"comment\">/*p+k等价于&amp;a[k]*/</span></span><br><span class=\"line\">     aver=aver+*(p+k);  <span class=\"comment\">/*  *(p+k)等价于a[k]*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    aver=aver/<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">10</span>;k++)</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\t&quot;</span>,*(p+k));  <span class=\"comment\">/*  *(p+k)等价于a[k] */</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n平均值=%f\\n&quot;</span>,aver);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"在该程序运行过程中指针变量p的值不变化-接下来我将为你们展示我另一种指针变量p的值发生变化的答案\"><a class=\"markdownIt-Anchor\" href=\"#在该程序运行过程中指针变量p的值不变化-接下来我将为你们展示我另一种指针变量p的值发生变化的答案\">#</a> 在该程序运行过程中，指针变量 p 的值不变化。接下来我将为你们展示我另一种指针变量 p 的值发生变化的答案。</h3>\n<p>程序代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a[10],*p=a,i;</span><br><span class=\"line\">    float aver=0;</span><br><span class=\"line\">    for(i=0;i&lt;10;i++,p++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     scanf(&quot;%d&quot;,p); /*p+k等价于&amp;a[k]*/</span><br><span class=\"line\">     aver=aver+*(p);  /*  *(p+k)等价于a[k]*/</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">aver=aver/10;</span><br><span class=\"line\">p=a;</span><br><span class=\"line\">for(i=0;i&lt;10;i++,p++)</span><br><span class=\"line\"> printf(&quot;%d\\t&quot;,*(p));  /*  *(p+k)等价于a[k] */</span><br><span class=\"line\">printf(&quot;\\n平均值=%f\\n&quot;,aver);</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><em><em>注意：在这个程序使用第二个 for 循环输出数组元素的值 (即</em> p，</em> p 与 a [i 等价] 之前，一定要让指针变量 p 重新指向数组的第一个元素 (即执行语句 “p=a;”)，否则会出错。**<br>\n 从上面两个程序可以看出：使用指针变量 p 引用数组元素时，既可以用 p+i 方式，也可以用 p<ins> 方式。用 p+i 方式时，p 的值不变 (p 中存放数组首地址)。用 p</ins> 方式时，p 的初值是数组首地址 (a [0] 的地址)，后续按顺序取其它数组元素的地址。这两种方式都可以按顺序访问数组的每个元素。</p>\n<h2 id=\"指针使用的几个小细节\"><a class=\"markdownIt-Anchor\" href=\"#指针使用的几个小细节\">#</a> 指针使用的几个小细节：</h2>\n<h3 id=\"1指针初始化\"><a class=\"markdownIt-Anchor\" href=\"#1指针初始化\">#</a> 〈1〉指针初始化。</h3>\n<p>在定义指针变量时，可以用合法的指针值对它进行初始化。例如：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n, * p = &amp;n;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2空指针\"><a class=\"markdownIt-Anchor\" href=\"#2空指针\">#</a> &lt;2&gt; 空指针</h3>\n<p>空指针是一个特殊的值，也是唯一一个对任何指针类型都合法的值。一个指针变量具有空值，表示它当时没有被赋予有意义的地址，处于闲置状态。</p>\n<p>空指针值用 0 表示。将空值赋予一个指针变量，说明该指针变量不再是一个不确定的值，而是一个有效的值。</p>\n<p>为了提高程序的可读性，C 语言标准库定义了一个与 0 等价的符号常量 NULL，当 p 是一个指针变量时，在程序中有两种形式：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n, * p = &amp;n;</span><br><span class=\"line\">\tp = <span class=\"literal\">NULL</span>;<span class=\"comment\">//第一种</span></span><br><span class=\"line\">\tp = <span class=\"number\">0</span>;<span class=\"comment\">//第二种</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这两种写法都是将指针 p 放置为空指针值，前一种写法使读该程序的人容易意识到这里是一个指针赋值。采用前一种写法时，必须通过 #include &lt;stdio.h&gt; 包含相应的标准头文件。</p>\n<h3 id=\"3如果指针变量p指向数组a的元素ai即pai则需要注意以下几点\"><a class=\"markdownIt-Anchor\" href=\"#3如果指针变量p指向数组a的元素ai即pai则需要注意以下几点\">#</a> &lt;3&gt; 如果指针变量 p 指向数组 a 的元素 a [i]（即 p=&amp;a [i]），则需要注意以下几点：</h3>\n<ol>\n<li>\n<p>*(p–) 相当于 a [i–], 先取 *p，再使 p 减 1。</p>\n</li>\n<li>\n<p>*（++p）相当于 a [++i], 先使 p 加 1，再取 *p。</p>\n</li>\n<li>\n<p>*（–p）相当于 a [–i]，先使 p 减 1，再取 *p。</p>\n</li>\n</ol>\n<h3 id=\"4如果指针变量p指向数组a的首地址即pa则需要注意以下几点\"><a class=\"markdownIt-Anchor\" href=\"#4如果指针变量p指向数组a的首地址即pa则需要注意以下几点\">#</a> &lt;4&gt; 如果指针变量 p 指向数组 a 的首地址（即 p=a），则需要注意以下几点：</h3>\n<ol>\n<li>执行 p++(或 p+=1) 后，p 指向数组的下一个元素。</li>\n<li>*p<ins> 相当于 *(p</ins>)。因为 * 和 ++ 的优先级相同，++ 是右结合运算符。</li>\n<li>*(p++) 与 *(<ins>p) 的作用不同。 *(p</ins>) 为先取 *p, 再使 p 加 1； *(++p) 为先使 p 加 1，再取 *p。</li>\n<li>(*p)++ 表示 p 指向的数组元素的值加 1。<strong>// 这个可别学懵逼了</strong></li>\n</ol>\n<h3 id=\"5当两个指针变量指向同一个数组时可以求他们的差得到的结果是对应的两个数组元素的下标之差可能时负整数-当指向的不是同一个数组时对他们的比较将毫无意义\"><a class=\"markdownIt-Anchor\" href=\"#5当两个指针变量指向同一个数组时可以求他们的差得到的结果是对应的两个数组元素的下标之差可能时负整数-当指向的不是同一个数组时对他们的比较将毫无意义\">#</a> &lt;5&gt; 当两个指针变量指向同一个数组时，可以求他们的差，得到的结果是对应的两个数组元素的下标之差（可能时负整数）。当指向的不是同一个数组时，对他们的比较将毫无意义。</h3>\n",
            "tags": [
                "C语言指针复习"
            ]
        },
        {
            "id": "http://example.com/2023/01/14/%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E7%9A%84%E5%AE%9A%E4%B9%89/",
            "url": "http://example.com/2023/01/14/%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E7%9A%84%E5%AE%9A%E4%B9%89/",
            "title": "指针变量的定义",
            "date_published": "2023-01-14T11:24:05.000Z",
            "content_html": "<h1 id=\"指针变量的定义\"><a class=\"markdownIt-Anchor\" href=\"#指针变量的定义\">#</a> 指针变量的定义</h1>\n<p><strong>在程序执行过程中，由于是通过变量的地址来找到存储变量值的内存单元从而取的变量的值，因此将变量的地址又称为变量的指针。</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest1();</span><br><span class=\"line\">\tsystem(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">100</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//取变量地址用&amp;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&amp;num代表标量的num的起始地址</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p&quot;</span>, &amp;num);<span class=\"comment\">//输出num的起始地址</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//需求：定义一个指针变量 保存num的空间地址</span></span><br><span class=\"line\">\t<span class=\"comment\">//在定义的时候：*说明p是指针变量 而不是普通变量</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> *p=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;sizeof(p)=%d\\n&quot;</span>, <span class=\"keyword\">sizeof</span>(p));<span class=\"comment\">//输出指针占用的字节数</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//num的地址与p建立关系</span></span><br><span class=\"line\">\tp = &amp;num;</span><br><span class=\"line\">\t<span class=\"comment\">//效果演示</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num=%d&quot;</span>, num);<span class=\"comment\">//100</span></span><br><span class=\"line\">\t<span class=\"comment\">//使用中：*p表示取p报存的地址编号对应的空间内容</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;*p=%d&quot;</span>, *p);<span class=\"comment\">//100</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：</p>\n<p>定义指针变量时，应该注意以下两个问题。</p>\n<ol>\n<li>在定义格式中，标识符前的 * 只是一个符号，表示其后的变量是一个指针变量。</li>\n<li>指针变量的类型必须与其指向的变量类型一致，否则会出错。</li>\n</ol>\n<p>例如以下这段代码就是出错的</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> x;</span><br><span class=\"line\"><span class=\"type\">char</span> *p1=&amp;x;</span><br></pre></td></tr></table></figure>\n<p>运算符 * 是指针运算符，用于访问指针变量所指向的变量。</p>\n<p>例如</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> n=<span class=\"number\">36</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *p1;</span><br><span class=\"line\">p1=<span class=\"number\">36</span>;</span><br></pre></td></tr></table></figure>\n<p>其中，*p1yun 等价，可用间接方式访问 n, 即用 *p1 代表 n，语句 “*p1=36；” 与 “n=36;” 等价。</p>\n<p>有趣的示例</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m = <span class=\"number\">30</span>, n = <span class=\"number\">60</span>, * p;</span><br><span class=\"line\">\tp = &amp;m;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, m, *p);</span><br><span class=\"line\">\t*p = <span class=\"number\">230</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, m, *p);</span><br><span class=\"line\">\tp = &amp;n;</span><br><span class=\"line\">\t*p = <span class=\"number\">780</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, n, *p);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>运行结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>30，30</td>\n</tr>\n<tr>\n<td>230，230</td>\n</tr>\n<tr>\n<td>780，780</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>同一个指针可以变量可先后指向不同的变量。</p>\n</blockquote>\n<h2 id=\"例题使用指针变量编写交换两个变量的值\"><a class=\"markdownIt-Anchor\" href=\"#例题使用指针变量编写交换两个变量的值\">#</a> 例题：使用指针变量编写：交换两个变量的值</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a, b, c, * p1, * p2;</span><br><span class=\"line\">\tp1 = &amp;a;</span><br><span class=\"line\">\tp2 = &amp;b;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入整型变量a和b的值：&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d,%d&quot;</span>, p1, p2);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;交换前a和b的值分别是：&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, *p1, *p2);</span><br><span class=\"line\">\tc = *p1;</span><br><span class=\"line\">\t*p1 = *p2;</span><br><span class=\"line\">\t*p2 = c;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;交换后a和b的值分别是：&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, *p1, *p2);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>程序运行情况如下（假设 a 和 b 分别输入 5 和 8）：</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>输入整型变量 a 和 b 的值：5，8</td>\n</tr>\n<tr>\n<td>交换前 a 和 b 的值分别是：5，8</td>\n</tr>\n<tr>\n<td>交换后 a 和 b 的值分别是：8，5</td>\n</tr>\n</tbody>\n</table>\n<p><strong>that is all,thanks!</strong></p>\n",
            "tags": [
                "C语言指针复习"
            ]
        }
    ]
}