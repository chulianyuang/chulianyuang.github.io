{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my world • All posts by \"c语言指针复习\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/02/24/%E6%9E%9A%E4%B8%BE/",
            "url": "http://example.com/2023/02/24/%E6%9E%9A%E4%B8%BE/",
            "title": "枚举",
            "date_published": "2023-02-24T12:59:06.000Z",
            "content_html": "<p><strong>定义：枚举是 C 语言中的一种基本数据类型，用于定义一组具有离散值的常量。</strong></p>\n<p><strong>优点：它可以让数据更简洁，更易读。</strong></p>\n<p><strong>主要用途：</strong>枚举类型通常用于为程序中的一组相关的常量取名字，以便于程序的可读性和维护性。</p>\n<p>定义一个枚举类型，需要使用 <strong>enum</strong> 关键字，后面跟着枚举类型的名称，以及用大括号 <strong>{}</strong> 括起来的一组枚举常量。每个枚举常量可以用一个标识符来表示，也可以为它们指定一个整数值，如果没有指定，那么默认从 <strong>0</strong> 开始递增。</p>\n<p>例子：</p>\n<table>\n<thead>\n<tr>\n<th>enum　枚举名　{枚举元素1,枚举元素2,……};</th>\n</tr>\n</thead>\n</table>\n<p>接下来我们举个例子，比如：一星期有 7 天，如果不用枚举，我们需要使用 #define 来为每个整数定义一个别名</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MON  1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> TUE  2</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WED  3</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> THU  4</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> FRI  5</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SAT  6</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SUN  7</span></span><br></pre></td></tr></table></figure>\n\n<p>这样子你是不是觉得很麻烦，作为一个大懒虫，我们的原则就是能少一个符号就少一个符号。所以上枚举！！！！！</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">DAY</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">      MON=<span class=\"number\">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>两个对比了一下，用上了枚举是不是整个人都舒服了不少。</p>\n<p><strong>注意：第一个枚举成员的默认值为整型的 0，后续枚举成员的值在前一个成员上加 1。我们在这个实例中把第一个枚举成员的值定义为 1，第二个就为 2，以此类推。</strong></p>\n<p><strong>可以在定义枚举类型时改变枚举元素的值：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">season</span> &#123;</span>spring, summer=<span class=\"number\">3</span>, autumn, winter&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>没有指定值的枚举元素，其值为前一元素加 1。也就说 spring 的值为 0，summer 的值为 3，autumn 的值为 4，winter 的值为 5</p>\n<hr>\n<h3 id=\"枚举变量的定义\"><a href=\"#枚举变量的定义\" class=\"headerlink\" title=\"枚举变量的定义\"></a>枚举变量的定义</h3><p>前面我们只是声明了枚举类型，接下来我们看看如何定义枚举变量。</p>\n<p>我们可以通过以下三种方式来定义枚举变量</p>\n<p><strong>1、先定义枚举类型，再定义枚举变量</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum DAY</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      MON=1, TUE, WED, THU, FRI, SAT, SUN</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">enum DAY day;</span><br></pre></td></tr></table></figure>\n\n<p><strong>2、定义枚举类型的同时定义枚举变量</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">DAY</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">      MON=<span class=\"number\">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class=\"line\">&#125; day;</span><br></pre></td></tr></table></figure>\n\n<p><strong>3、省略枚举名称，直接定义枚举变量</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">      MON=<span class=\"number\">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class=\"line\">&#125; day;</span><br></pre></td></tr></table></figure>\n\n<p>例题：猜猜下面这个实例输出的结果是：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">DAY</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">      MON=<span class=\"number\">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">DAY</span> <span class=\"title\">day</span>;</span></span><br><span class=\"line\">    day = WED;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,day);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>答案：</p>\n<table>\n<thead>\n<tr>\n<th>3</th>\n</tr>\n</thead>\n</table>\n<p>在C 语言中，枚举类型是被当做 int 或者 unsigned int 类型来处理的，所以按照 C 语言规范是没有办法遍历枚举类型的。</p>\n<p>不过在一些特殊的情况下，枚举类型必须连续是可以实现有条件的遍历。</p>\n<p>以下实例使用 for 来遍历枚举的元素：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">DAY</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">      MON=<span class=\"number\">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class=\"line\">&#125; day;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历枚举元素</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (day = MON; day &lt;= SUN; day++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;枚举元素：%d \\n&quot;</span>, day);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>以上实例输出结果为：</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>枚举元素：1</td>\n</tr>\n<tr>\n<td>枚举元素：2</td>\n</tr>\n<tr>\n<td>枚举元素：3</td>\n</tr>\n<tr>\n<td>枚举元素：4</td>\n</tr>\n<tr>\n<td>枚举元素：5</td>\n</tr>\n<tr>\n<td>枚举元素：6</td>\n</tr>\n<tr>\n<td>枚举元素：7</td>\n</tr>\n</tbody></table>\n<hr>\n<p><strong>枚举在 switch 中的使用：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">color</span> &#123;</span> red =<span class=\"number\">1</span>, green, blue &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> favorite_color;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* 用户输入数字来选择颜色 */</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入你喜欢的颜色: (1. red, 2. green, 3. blue): &quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%u&quot;</span>, &amp;favorite_color);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* 输出结果 */</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (favorite_color)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> red:</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;你喜欢的颜色是红色&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> green:</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;你喜欢的颜色是绿色&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> blue:</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;你喜欢的颜色是蓝色&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;你没有选择你喜欢的颜色&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上实例输出结果为：</p>\n<table>\n<thead>\n<tr>\n<th>请输入你喜欢的颜色: (1. red, 2. green, 3. blue): 1</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>你喜欢的颜色是红色</td>\n</tr>\n</tbody></table>\n<h3 id=\"将整数转换为枚举\"><a href=\"#将整数转换为枚举\" class=\"headerlink\" title=\"将整数转换为枚举\"></a>将整数转换为枚举</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">day</span></span></span><br><span class=\"line\"><span class=\"class\">    &#123;</span></span><br><span class=\"line\">        saturday,</span><br><span class=\"line\">        sunday,</span><br><span class=\"line\">        monday,</span><br><span class=\"line\">        tuesday,</span><br><span class=\"line\">        wednesday,</span><br><span class=\"line\">        thursday,</span><br><span class=\"line\">        friday</span><br><span class=\"line\">    &#125; workday;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">day</span> <span class=\"title\">weekend</span>;</span></span><br><span class=\"line\">    weekend = ( <span class=\"keyword\">enum</span> day ) a;  <span class=\"comment\">//类型转换</span></span><br><span class=\"line\">    <span class=\"comment\">//weekend = a; //错误</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;weekend:%d&quot;</span>,weekend);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上就是关于枚举类型的相关知识点，thanks.</p>\n",
            "tags": [
                "C语言指针复习"
            ]
        },
        {
            "id": "http://example.com/2023/02/04/%E6%8C%87%E9%92%88%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "url": "http://example.com/2023/02/04/%E6%8C%87%E9%92%88%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "title": "指针与字符串",
            "date_published": "2023-02-04T11:57:16.000Z",
            "content_html": "<p><strong>定义：字符串在内存中的起始地址称为字符串的指针，可以定义一个字符型指针变量来指向一个字符串。</strong></p>\n<h1 id=\"使用指针处理字符串\"><a href=\"#使用指针处理字符串\" class=\"headerlink\" title=\"使用指针处理字符串\"></a>使用指针处理字符串</h1><p>我们之前是怎么数出一个字符串的捏，看下面代码。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> str[] = <span class=\"string\">&quot;We do something by conputer.&quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,str);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>是不是这样子用一个字符数组来输出字符串？但是在学完指针后，我们将学习使用字符型数组来输出一个字符串。</p>\n<p>直接上代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar* pstr = &quot;We do something by computer.&quot;;</span><br><span class=\"line\">\tprintf(&quot;%s\\n&quot;, pstr);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：用字符指针后是将字符串常量的首地址赋给指针变量，千万不要理解为将字符串常量赋值给指针变量。这个很impotant。</strong></p>\n<p>字符型数组与字符型指针变量两者的概念不一样，字符型数组可以存放字符串的每个具体的字符值，而字符型指针变量是存放字符串的首地址（也可以存放字符串中某个字符的地址）</p>\n<p>对于字符型数组与字符型指针变量，都可以使用%s格式控制符进行整体输入输出。</p>\n<p>例题：分析下面程序中使用字符型指针变量的情况。</p>\n<p>程序代码如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> *pc,str[<span class=\"number\">30</span>] = &#123;<span class=\"string\">&quot;We do something by conputer.&quot;</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tpc = &amp;str[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (*pc != <span class=\"string\">&#x27;\\0&#x27;</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (*pc == <span class=\"number\">32</span>)</span><br><span class=\"line\">\t\t\tn++;<span class=\"comment\">/*空格的ASCII码的值为32*/</span></span><br><span class=\"line\">\t\tpc++;<span class=\"comment\">/*改变地址*/</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, n);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>程序运行结果如下：</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>n&#x3D;6</td>\n</tr>\n</tbody></table>\n<p>【分析】循环前，字符型指针变量pc指向数组str中存放的字符串的每一个字符，即存放字符’W’的地址，循环的条件是“*pc!&#x3D;’\\0’“，循环依次处理数组str中存放的每一个字符，并统计该字符串中空格的个数。</p>\n<h1 id=\"字符型指针变量作函数参数\"><a href=\"#字符型指针变量作函数参数\" class=\"headerlink\" title=\"字符型指针变量作函数参数\"></a>字符型指针变量作函数参数</h1><table>\n<thead>\n<tr>\n<th>从一个函数将一个字符串传递到另一个函数，可以用字符型数组名或字符型指针变量作为参数。共有以下4种情况：</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1. 字符型数组名做实参和形参。</td>\n</tr>\n<tr>\n<td>2.字符型指针变量作实参，字符型数组名作形参。</td>\n</tr>\n<tr>\n<td>3.字符型指针变量作实参和形参。</td>\n</tr>\n<tr>\n<td>4.字符型数组名作实参和字符型指针变量作形参。</td>\n</tr>\n</tbody></table>\n<p>接下来我将开始通过程序示例详细展示这几种情况。</p>\n<p>例题：以字符型数组名做实参和形参，在被调用函数中统计字符个数。</p>\n<p>【分析】可以定义函数tongji完成字符统计，在主函数中使用语句”sum&#x3D;tongji(a);“调用函数tongji，用字符型数组名a作实参。被调函数的形参是字符型数组名str。在被调函数中完成字符统计之后，用return语句返回统计值。</p>\n<p>程序代码如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">taozi</span><span class=\"params\">(<span class=\"type\">char</span> str[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (str[n] != <span class=\"string\">&#x27;\\0&#x27;</span>)</span><br><span class=\"line\">\t\tn++;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> a[<span class=\"number\">40</span>] = <span class=\"string\">&quot;you are reading a book.&quot;</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> sum;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, a);</span><br><span class=\"line\">\tsum = taozi(a);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, sum);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个程序中有意思的是无论你a这个数组后面改成多少位它最终输出的结果都是一样的，都是23.因为在系统读完你写的字符串后在后面都是会填补‘\\0’进行补充。</p>\n",
            "tags": [
                "C语言指针复习"
            ]
        },
        {
            "id": "http://example.com/2023/02/04/%E6%8C%87%E5%90%91%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F/",
            "url": "http://example.com/2023/02/04/%E6%8C%87%E5%90%91%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F/",
            "title": "指向一维数组的指针变量",
            "date_published": "2023-02-04T09:01:06.000Z",
            "content_html": "<h2 id=\"指向一维数组的指针变量定义：\"><a href=\"#指向一维数组的指针变量定义：\" class=\"headerlink\" title=\"指向一维数组的指针变量定义：\"></a>指向一维数组的指针变量定义：</h2><p>如果定义一个指针变量，使其指向一个一维数组的首地址，或指向某个数组元素的地址，则称该指针变量为指向一维数组的指针变量。<br>代码实例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>],*p;<span class=\"comment\">//首先对他们的类型做一个定义</span></span><br><span class=\"line\">    p=a;</span><br><span class=\"line\">    p=&amp;a[<span class=\"number\">0</span>];<span class=\"comment\">//这两种规定都是符合的。</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>以上这个是指向数组的首地址输出的都只是a[0]的值。<br>对于上面所写&amp;a[i]的表示形式，由于数组元素访问运算符[]的优先级更高，所以这里不必写成&amp;(a[i])点形式。<br><strong>插入优先级排序：由高到低为：！，算术运算符，关系运算符，&amp;&amp;，||，赋值运算符。</strong></p>\n<h2 id=\"可以得到数组元素a-i-地址的方式有四种-接下来，我就只会用代码来介绍常用的三种。\"><a href=\"#可以得到数组元素a-i-地址的方式有四种-接下来，我就只会用代码来介绍常用的三种。\" class=\"headerlink\" title=\"可以得到数组元素a[i]地址的方式有四种 接下来，我就只会用代码来介绍常用的三种。\"></a>可以得到数组元素a[i]地址的方式有四种 接下来，我就只会用代码来介绍常用的三种。</h2><h3 id=\"‌第一种是通过数组的下标来引用数组元素，这也是我们之前学数组时一直用的方法，这里就不过多介绍了，如下所示：\"><a href=\"#‌第一种是通过数组的下标来引用数组元素，这也是我们之前学数组时一直用的方法，这里就不过多介绍了，如下所示：\" class=\"headerlink\" title=\"‌第一种是通过数组的下标来引用数组元素，这也是我们之前学数组时一直用的方法，这里就不过多介绍了，如下所示：\"></a>‌第一种是通过数组的下标来引用数组元素，这也是我们之前学数组时一直用的方法，这里就不过多介绍了，如下所示：</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%5d&quot;</span>,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"‌第二种是可以通过数组名来访问数组元素。例如：-a-i-与a-i-等价。\"><a href=\"#‌第二种是可以通过数组名来访问数组元素。例如：-a-i-与a-i-等价。\" class=\"headerlink\" title=\"‌第二种是可以通过数组名来访问数组元素。例如：* (a+i)与a[i]等价。\"></a>‌第二种是可以通过数组名来访问数组元素。例如：* (a+i)与a[i]等价。</h3><p><strong>注意：使用数组名时，不能用a++的方式，因为在这里的a是地址常量，而常量不能被重新赋值。</strong><br>实例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%5d&quot;</span>,*(a+i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"‌第三种，如果定义了指针变量p-int-p-并使p指向数组a的首地址-即p-x3D-a-则可以用指针变量来访问数组元素元素，-p-0-即-p-与a-0-等价-p-i-与a-i-等价。\"><a href=\"#‌第三种，如果定义了指针变量p-int-p-并使p指向数组a的首地址-即p-x3D-a-则可以用指针变量来访问数组元素元素，-p-0-即-p-与a-0-等价-p-i-与a-i-等价。\" class=\"headerlink\" title=\"‌第三种，如果定义了指针变量p(int p;),并使p指向数组a的首地址(即p&#x3D;a),则可以用指针变量来访问数组元素元素，(p+0)(即(p))与a[0]等价~~~~(p+i)与a[i]等价。\"></a>‌第三种，如果定义了指针变量p(int p;),并使p指向数组a的首地址(即p&#x3D;a),则可以用指针变量来访问数组元素元素，(p+0)(即(p))与a[0]等价~~~~(p+i)与a[i]等价。</h3><p>实例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> *p; p=a;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%5d&quot;</span>,*(p+i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"例题，使用指向数组的指针变量，计算数组元素的平均值。\"><a href=\"#例题，使用指向数组的指针变量，计算数组元素的平均值。\" class=\"headerlink\" title=\"例题，使用指向数组的指针变量，计算数组元素的平均值。\"></a>例题，使用指向数组的指针变量，计算数组元素的平均值。</h2><h3 id=\"提示：定义数组和指针变量后，让指针变量指向数组，循环求和。\"><a href=\"#提示：定义数组和指针变量后，让指针变量指向数组，循环求和。\" class=\"headerlink\" title=\"提示：定义数组和指针变量后，让指针变量指向数组，循环求和。\"></a>提示：定义数组和指针变量后，让指针变量指向数组，循环求和。</h3><p>代码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">10</span>],*p,k;</span><br><span class=\"line\">    <span class=\"type\">float</span> aver=<span class=\"number\">0</span>;</span><br><span class=\"line\">    p=a;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">10</span>;k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,p+k); <span class=\"comment\">/*p+k等价于&amp;a[k]*/</span></span><br><span class=\"line\">     aver=aver+*(p+k);  <span class=\"comment\">/*  *(p+k)等价于a[k]*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    aver=aver/<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">10</span>;k++)</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\t&quot;</span>,*(p+k));  <span class=\"comment\">/*  *(p+k)等价于a[k] */</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n平均值=%f\\n&quot;</span>,aver);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在该程序运行过程中，指针变量p的值不变化。接下来我将为你们展示我另一种指针变量p的值发生变化的答案。\"><a href=\"#在该程序运行过程中，指针变量p的值不变化。接下来我将为你们展示我另一种指针变量p的值发生变化的答案。\" class=\"headerlink\" title=\"在该程序运行过程中，指针变量p的值不变化。接下来我将为你们展示我另一种指针变量p的值发生变化的答案。\"></a>在该程序运行过程中，指针变量p的值不变化。接下来我将为你们展示我另一种指针变量p的值发生变化的答案。</h3><p>程序代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a[10],*p=a,i;</span><br><span class=\"line\">    float aver=0;</span><br><span class=\"line\">    for(i=0;i&lt;10;i++,p++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     scanf(&quot;%d&quot;,p); /*p+k等价于&amp;a[k]*/</span><br><span class=\"line\">     aver=aver+*(p);  /*  *(p+k)等价于a[k]*/</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">aver=aver/10;</span><br><span class=\"line\">p=a;</span><br><span class=\"line\">for(i=0;i&lt;10;i++,p++)</span><br><span class=\"line\"> printf(&quot;%d\\t&quot;,*(p));  /*  *(p+k)等价于a[k] */</span><br><span class=\"line\">printf(&quot;\\n平均值=%f\\n&quot;,aver);</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><em><em>注意：在这个程序使用第二个for循环输出数组元素的值(即</em> p，</em> p与a[i等价]之前，一定要让指针变量p重新指向数组的第一个元素(即执行语句“p&#x3D;a;”)，否则会出错。**<br>从上面两个程序可以看出：使用指针变量p引用数组元素时，既可以用p+i方式，也可以用p++方式。用p+i方式时，p的值不变(p中存放数组首地址)。用p++方式时，p的初值是数组首地址(a[0]的地址)，后续按顺序取其它数组元素的地址。这两种方式都可以按顺序访问数组的每个元素。</p>\n<h2 id=\"指针使用的几个小细节：\"><a href=\"#指针使用的几个小细节：\" class=\"headerlink\" title=\"指针使用的几个小细节：\"></a>指针使用的几个小细节：</h2><h3 id=\"〈1〉指针初始化。\"><a href=\"#〈1〉指针初始化。\" class=\"headerlink\" title=\"〈1〉指针初始化。\"></a>〈1〉指针初始化。</h3><p>在定义指针变量时,可以用合法的指针值对它进行初始化。例如：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n, * p = &amp;n;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"lt-2-gt-空指针\"><a href=\"#lt-2-gt-空指针\" class=\"headerlink\" title=\"&lt;2&gt;空指针\"></a>&lt;2&gt;空指针</h3><p>空指针是一个特殊的值，也是唯一一个对任何指针类型都合法的值。一个指针变量具有空值，表示它当时没有被赋予有意义的地址，处于闲置状态。</p>\n<p>空指针值用0表示。将空值赋予一个指针变量，说明该指针变量不再是一个不确定的值，而是一个有效的值。</p>\n<p>为了提高程序的可读性，C语言标准库定义了一个与0等价的符号常量NULL，当p是一个指针变量时，在程序中有两种形式：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n, * p = &amp;n;</span><br><span class=\"line\">\tp = <span class=\"literal\">NULL</span>;<span class=\"comment\">//第一种</span></span><br><span class=\"line\">\tp = <span class=\"number\">0</span>;<span class=\"comment\">//第二种</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这两种写法都是将指针p放置为空指针值，前一种写法使读该程序的人容易意识到这里是一个指针赋值。采用前一种写法时，必须通过#include &lt;stdio.h&gt;包含相应的标准头文件。</p>\n<h3 id=\"lt-3-gt-如果指针变量p指向数组a的元素a-i-（即p-x3D-amp-a-i-），则需要注意以下几点：\"><a href=\"#lt-3-gt-如果指针变量p指向数组a的元素a-i-（即p-x3D-amp-a-i-），则需要注意以下几点：\" class=\"headerlink\" title=\"&lt;3&gt;如果指针变量p指向数组a的元素a[i]（即p&#x3D;&amp;a[i]），则需要注意以下几点：\"></a>&lt;3&gt;如果指针变量p指向数组a的元素a[i]（即p&#x3D;&amp;a[i]），则需要注意以下几点：</h3><ol>\n<li><p>*(p–)相当于a[i–],先取 *p，再使p减1。</p>\n</li>\n<li><p>*（++p）相当于a[++i],先使p加1，再取 *p。</p>\n</li>\n<li><p>*（–p）相当于a[–i]，先使p减1，再取 *p。</p>\n</li>\n</ol>\n<h3 id=\"lt-4-gt-如果指针变量p指向数组a的首地址（即p-x3D-a），则需要注意以下几点：\"><a href=\"#lt-4-gt-如果指针变量p指向数组a的首地址（即p-x3D-a），则需要注意以下几点：\" class=\"headerlink\" title=\"&lt;4&gt;如果指针变量p指向数组a的首地址（即p&#x3D;a），则需要注意以下几点：\"></a>&lt;4&gt;如果指针变量p指向数组a的首地址（即p&#x3D;a），则需要注意以下几点：</h3><ol>\n<li>执行p++(或p+&#x3D;1)后，p指向数组的下一个元素。</li>\n<li>*p++相当于 *(p++)。因为 *和++的优先级相同，++是右结合运算符。</li>\n<li>*(p++)与 *(++p)的作用不同。 *(p++)为先取 *p,再使p加1； *(++p)为先使p加1，再取 *p。</li>\n<li>(<em>p)++表示p指向的数组元素的值加1。</em><em>&#x2F;&#x2F;这个可别学懵逼了</em>*</li>\n</ol>\n<h3 id=\"lt-5-gt-当两个指针变量指向同一个数组时，可以求他们的差，得到的结果是对应的两个数组元素的下标之差（可能时负整数）。当指向的不是同一个数组时，对他们的比较将毫无意义。\"><a href=\"#lt-5-gt-当两个指针变量指向同一个数组时，可以求他们的差，得到的结果是对应的两个数组元素的下标之差（可能时负整数）。当指向的不是同一个数组时，对他们的比较将毫无意义。\" class=\"headerlink\" title=\"&lt;5&gt;当两个指针变量指向同一个数组时，可以求他们的差，得到的结果是对应的两个数组元素的下标之差（可能时负整数）。当指向的不是同一个数组时，对他们的比较将毫无意义。\"></a>&lt;5&gt;当两个指针变量指向同一个数组时，可以求他们的差，得到的结果是对应的两个数组元素的下标之差（可能时负整数）。当指向的不是同一个数组时，对他们的比较将毫无意义。</h3>",
            "tags": [
                "C语言指针复习"
            ]
        },
        {
            "id": "http://example.com/2023/01/14/%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E7%9A%84%E5%AE%9A%E4%B9%89/",
            "url": "http://example.com/2023/01/14/%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E7%9A%84%E5%AE%9A%E4%B9%89/",
            "title": "指针变量的定义",
            "date_published": "2023-01-14T11:24:05.000Z",
            "content_html": "<h1 id=\"指针变量的定义\"><a href=\"#指针变量的定义\" class=\"headerlink\" title=\"指针变量的定义\"></a>指针变量的定义</h1><p><strong>在程序执行过程中，由于是通过变量的地址来找到存储变量值的内存单元从而取的变量的值，因此将变量的地址又称为变量的指针。</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest1();</span><br><span class=\"line\">\tsystem(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">100</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//取变量地址用&amp;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&amp;num代表标量的num的起始地址</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p&quot;</span>, &amp;num);<span class=\"comment\">//输出num的起始地址</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//需求：定义一个指针变量 保存num的空间地址</span></span><br><span class=\"line\">\t<span class=\"comment\">//在定义的时候：*说明p是指针变量 而不是普通变量</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> *p=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;sizeof(p)=%d\\n&quot;</span>, <span class=\"keyword\">sizeof</span>(p));<span class=\"comment\">//输出指针占用的字节数</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//num的地址与p建立关系</span></span><br><span class=\"line\">\tp = &amp;num;</span><br><span class=\"line\">\t<span class=\"comment\">//效果演示</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num=%d&quot;</span>, num);<span class=\"comment\">//100</span></span><br><span class=\"line\">\t<span class=\"comment\">//使用中：*p表示取p报存的地址编号对应的空间内容</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;*p=%d&quot;</span>, *p);<span class=\"comment\">//100</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<p>定义指针变量时，应该注意以下两个问题。</p>\n<ol>\n<li>在定义格式中，标识符前的*只是一个符号，表示其后的变量是一个指针变量。</li>\n<li>指针变量的类型必须与其指向的变量类型一致，否则会出错。</li>\n</ol>\n<p>例如以下这段代码就是出错的</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> x;</span><br><span class=\"line\"><span class=\"type\">char</span> *p1=&amp;x;</span><br></pre></td></tr></table></figure>\n\n<p>运算符*是指针运算符，用于访问指针变量所指向的变量。</p>\n<p>例如</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> n=<span class=\"number\">36</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *p1;</span><br><span class=\"line\">p1=<span class=\"number\">36</span>;</span><br></pre></td></tr></table></figure>\n\n<p>其中，*p1yun等价，可用间接方式访问n,即用 *p1代表n，语句“ *p1&#x3D;36；”与“n&#x3D;36;”等价。</p>\n<p>有趣的示例</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m = <span class=\"number\">30</span>, n = <span class=\"number\">60</span>, * p;</span><br><span class=\"line\">\tp = &amp;m;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, m, *p);</span><br><span class=\"line\">\t*p = <span class=\"number\">230</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, m, *p);</span><br><span class=\"line\">\tp = &amp;n;</span><br><span class=\"line\">\t*p = <span class=\"number\">780</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, n, *p);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>运行结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>30，30</td>\n</tr>\n<tr>\n<td>230，230</td>\n</tr>\n<tr>\n<td>780，780</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>同一个指针可以变量可先后指向不同的变量。</p>\n</blockquote>\n<h2 id=\"例题：使用指针变量编写：交换两个变量的值\"><a href=\"#例题：使用指针变量编写：交换两个变量的值\" class=\"headerlink\" title=\"例题：使用指针变量编写：交换两个变量的值\"></a>例题：使用指针变量编写：交换两个变量的值</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a, b, c, * p1, * p2;</span><br><span class=\"line\">\tp1 = &amp;a;</span><br><span class=\"line\">\tp2 = &amp;b;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入整型变量a和b的值：&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d,%d&quot;</span>, p1, p2);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;交换前a和b的值分别是：&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, *p1, *p2);</span><br><span class=\"line\">\tc = *p1;</span><br><span class=\"line\">\t*p1 = *p2;</span><br><span class=\"line\">\t*p2 = c;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;交换后a和b的值分别是：&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d,%d\\n&quot;</span>, *p1, *p2);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>程序运行情况如下（假设a和b分别输入5和8）：</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>输入整型变量a和b的值：5，8</td>\n</tr>\n<tr>\n<td>交换前a和b的值分别是：5，8</td>\n</tr>\n<tr>\n<td>交换后a和b的值分别是：8，5</td>\n</tr>\n</tbody></table>\n<p><strong>that is all,thanks!</strong></p>\n",
            "tags": [
                "C语言指针复习"
            ]
        }
    ]
}