{
    "version": "https://jsonfeed.org/version/1",
    "title": "welcome to my world • All posts by \"习题答案\" tag",
    "description": "",
    "home_page_url": "https://chulianyuang.github.io",
    "items": [
        {
            "id": "https://chulianyuang.github.io/2023/03/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%BA%BF%E6%80%A7%E8%A1%A8%E4%B9%A0%E9%A2%98/",
            "url": "https://chulianyuang.github.io/2023/03/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%BA%BF%E6%80%A7%E8%A1%A8%E4%B9%A0%E9%A2%98/",
            "title": "数据结构第二章线性表习题",
            "date_published": "2023-03-20T15:48:48.000Z",
            "content_html": "<h1 id=\"1将两个递增的有序链表合并为一个递增的有序链表-要求结果链表仍使用原来两个链表的存储空间不另外占用其他的存储空间-表中不允许有重复数据\"><a class=\"markdownIt-Anchor\" href=\"#1将两个递增的有序链表合并为一个递增的有序链表-要求结果链表仍使用原来两个链表的存储空间不另外占用其他的存储空间-表中不允许有重复数据\">#</a> 1. 将两个递增的有序链表合并为一个递增的有序链表。要求结果链表仍使用原来两个链表的存储空间，不另外占用其他的存储空间。表中不允许有重复数据</h1>\n<h2 id=\"代码如下\"><a class=\"markdownIt-Anchor\" href=\"#代码如下\">#</a> 代码如下：</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*将两个递增的有序链表合并为一个递增的有序链表。要求结果链表仍使用原来两个链表的存储空间，不另外占用其它其它的存储空间。表中不允许有重复数据 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> date;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;Linklist;</span><br><span class=\"line\"><span class=\"comment\">//构造头节点</span></span><br><span class=\"line\">Linklist* <span class=\"title function_\">toujiedian</span><span class=\"params\">(Linklist *L)</span></span><br><span class=\"line\">&#123; </span><br><span class=\"line\">\tL=(Linklist*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Linklist));</span><br><span class=\"line\">\tL-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> L;</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125; </span><br><span class=\"line\"> Linklist* <span class=\"title function_\">chushihualianbiao</span> <span class=\"params\">(<span class=\"type\">int</span> e)</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\"> \t<span class=\"type\">int</span> d=<span class=\"number\">1</span>,r;</span><br><span class=\"line\"> \tLinklist *L=toujiedian(L),*a,*b;</span><br><span class=\"line\"> \ta=L;</span><br><span class=\"line\"> \t<span class=\"type\">int</span> i;</span><br><span class=\"line\"> \t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;e;i++,d++)</span><br><span class=\"line\"> \t&#123;</span><br><span class=\"line\"> \t\tb=(Linklist*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Linklist));</span><br><span class=\"line\"> \t\t</span><br><span class=\"line\"> \t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入第%d个数&quot;</span>,d);</span><br><span class=\"line\"> \t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;r);</span><br><span class=\"line\"> \t\tb-&gt;date=r;</span><br><span class=\"line\"> \t\tb-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\"> \t\ta-&gt;next=b;<span class=\"comment\">//这里别接错线 </span></span><br><span class=\"line\"> \t\ta=a-&gt;next;</span><br><span class=\"line\"></span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\">\t </span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> L;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"type\">void</span> <span class=\"title function_\">spelling</span><span class=\"params\">(Linklist *L)</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\"> \tLinklist *a;</span><br><span class=\"line\"> \ta=L-&gt;next;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;你输入的链表为：\\n&quot;</span>);</span><br><span class=\"line\"> \t<span class=\"keyword\">while</span>(a)</span><br><span class=\"line\">\t &#123;</span><br><span class=\"line\"> \t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\t&quot;</span>,a-&gt;date);</span><br><span class=\"line\"> \t\ta=a-&gt;next;</span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Linklist* <span class=\"title function_\">MergeList</span><span class=\"params\">(Linklist *La,Linklist *Lb)</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t&#123;<span class=\"comment\">//合并链表La和Lb，合并后的新表使用头指针Lc指向</span></span><br><span class=\"line\">\tLinklist *Lc;</span><br><span class=\"line\">    Linklist *pa,*pb,*pc,*q;</span><br><span class=\"line\">\t  pa=La-&gt;next; pb=Lb-&gt;next;   </span><br><span class=\"line\"> </span><br><span class=\"line\">\t  <span class=\"comment\">//pa和pb分别是链表La和Lb的工作指针,初始化为相应链表的第一个结点</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t  Lc=pc=La; <span class=\"comment\">//用La的头结点作为Lc的头结点</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t  <span class=\"keyword\">while</span>(pa &amp;&amp; pb)</span><br><span class=\"line\"> </span><br><span class=\"line\">\t&#123;<span class=\"keyword\">if</span>(pa-&gt;date&lt;pb-&gt;date)&#123;pc-&gt;next=pa;pc=pa;pa=pa-&gt;next;&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t    <span class=\"comment\">//取较小者La中的元素，将pa链接在pc的后面，pa指针后移</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(pa-&gt;date&gt;pb-&gt;date) &#123;pc-&gt;next=pb; pc=pb; pb=pb-&gt;next;&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t     <span class=\"comment\">//取较小者Lb中的元素，将pb链接在pc的后面，pb指针后移</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t    <span class=\"keyword\">else</span> <span class=\"comment\">//相等时取La中的元素，删除Lb中的元素</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t    &#123;     pc-&gt;next=pa;pc=pa;pa=pa-&gt;next;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t          q=pb-&gt;next;<span class=\"built_in\">free</span> (pb) ;pb =q;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t pc-&gt;next=pa?pa:pb;   <span class=\"comment\">//插入剩余段</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t    <span class=\"built_in\">free</span> (Lb);           <span class=\"comment\">//释放Lb的头结点</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Lc;</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t   Linklist *L;</span><br><span class=\"line\">\t   <span class=\"type\">int</span> e; </span><br><span class=\"line\">    toujiedian(L);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入第一个递增链表长度&quot;</span>);</span><br><span class=\"line\">   \t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e) ;</span><br><span class=\"line\">    L=chushihualianbiao (e);</span><br><span class=\"line\">    spelling(L);</span><br><span class=\"line\">    Linklist *P,*O;</span><br><span class=\"line\">    <span class=\"type\">int</span> k; </span><br><span class=\"line\">    toujiedian(P);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n输入第二个递增链表长度&quot;</span>);</span><br><span class=\"line\">   \t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;k) ;</span><br><span class=\"line\">    P=chushihualianbiao (k);</span><br><span class=\"line\">    spelling(P);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n两个链表合成后为:\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//O=lianbiaoronghe(L,P );</span></span><br><span class=\"line\">    O=MergeList(L,P);</span><br><span class=\"line\">    spelling(O);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "习题答案"
            ]
        }
    ]
}