<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>welcome to my world • Posts by &#34;知识点总结&#34; tag</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 07 Mar 2023 17:15:42 +0800</pubDate>
        <lastBuildDate>Tue, 07 Mar 2023 17:15:42 +0800</lastBuildDate>
        <category>三省吾身</category>
        <category>小白学C语言</category>
        <category>C语言函数复习</category>
        <category>C语言大一上学期期末复习</category>
        <category>中二病</category>
        <category>练习题</category>
        <category>大学计划1</category>
        <category>历史早读</category>
        <category>C语言探索</category>
        <category>鸡汤</category>
        <category>性理解</category>
        <category>慢节奏的生活</category>
        <category>C语言指针复习</category>
        <category>矩阵与求解</category>
        <category>日常小作</category>
        <category>慢慢就爱上的科目</category>
        <category>C语言复习</category>
        <category>课前演讲</category>
        <category>从年头红到年尾</category>
        <category>C语言实验报告</category>
        <category>关于创业的一条路</category>
        <category>全国英语四级考试</category>
        <category>环境保护</category>
        <category>英语角</category>
        <category>知识点总结</category>
        <category>细化操作</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/03/07/%E7%BB%AA%E8%AE%BA/</guid>
            <title>绪论</title>
            <link>http://example.com/2023/03/07/%E7%BB%AA%E8%AE%BA/</link>
            <category>知识点总结</category>
            <pubDate>Tue, 07 Mar 2023 17:15:42 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;绪论&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绪论&#34;&gt;#&lt;/a&gt; 绪论&lt;/h1&gt;
&lt;h2 id=&#34;树状图总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#树状图总结&#34;&gt;#&lt;/a&gt; 树状图总结&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;graph LR&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A[绪论] --&amp;gt;B(数据结构)--&amp;gt;C(逻辑结构)--&amp;gt;a(线性结构)--&amp;gt;d&amp;#123;线性表&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a--&amp;gt;q&amp;#123;栈和队列&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a--&amp;gt;w&amp;#123;字符串&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C--&amp;gt;b(非线性结构)--&amp;gt;e&amp;#123;树状图&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b--&amp;gt;r&amp;#123;图结构&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B--&amp;gt;D(存储结构)--&amp;gt;t&amp;#123;顺序存储结构&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D--&amp;gt;y&amp;#123;链式存储结构&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A[绪论] --&amp;gt;c(算法)--&amp;gt;u(定义)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c--&amp;gt;o(特性)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c--&amp;gt;p(评价标准)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c--&amp;gt;s(效率度量)--&amp;gt;f&amp;#123;时间复杂度&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  s--&amp;gt;g&amp;#123;空间复杂度&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;在这一章中主要介绍了数据结构的基本概念和术语以及算法和算法时间复杂度的分析方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#在这一章中主要介绍了数据结构的基本概念和术语以及算法和算法时间复杂度的分析方法&#34;&gt;#&lt;/a&gt; 在这一章中主要介绍了数据结构的基本概念和术语，以及算法和算法时间复杂度的分析方法。&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据结构是一门研究非数值计算程序设计中操作对象，以及这些对象之间的关系和操作对象，以及这些对象之间的关系和操作的学科。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据结构包括两个方面的内容：数据的逻辑结构和存储结构。同一逻辑结构采用不同的储存方法，可以得到不同的存储结构&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;逻辑结构是从具体问题抽象出来的数学模型，从逻辑关系上描述数据，它与数据的存储无关。根据数据元素之间关系的不同特性，通常有四类基本逻辑结构：集合结构，线性结构，树形结构和图状结构。&lt;/li&gt;
&lt;li&gt;存储结构是逻辑结构在计算机中的存储表示，有两类存储结构：顺序粗出结构和链式存储结构。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抽象数据类型是指由用户定义的，表示应用问题的数学模型，以及定义在这个模型上的一组操作的总称，具体包括三部分：数据对象，数据对象上关系的集合，以及对数据对象的基本操作的集合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;算法是为了解决某类问题而规定的一个有限长的操作数列。算法具有四个特性：正确性，可读性，健壮性和高效性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;算法分析的两个主要方面是分析算法的时间发杂度和空间复杂度，以考察算法的时间和空间效率。一般情况下，鉴于运算空间较为充足，故将算法的时间复杂度作为分析的重点。算法执行时间的数量级称为算法的渐近时间复杂度，T (n)=O (f (n))，它表示随着问题 n 的增大，算法执行时间的增长率和 f (n) 的增长率相同，简称时间复杂度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;这一章的知识点并不多我着重讲一下时间复杂度的相关知识&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#这一章的知识点并不多我着重讲一下时间复杂度的相关知识&#34;&gt;#&lt;/a&gt; 这一章的知识点并不多，我着重讲一下时间复杂度的相关知识&lt;/h3&gt;
&lt;p&gt;在描述算法复杂度时，经常用到 O (1) , O ( n ) , O ( l o g n ) , O ( n l o g n ) 来表示对应复杂度程度，不过目前大家默认也通过这几个方式表示&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTclQTklQkElRTklOTclQjQlRTUlQTQlOEQlRTYlOUQlODIlRTUlQkElQTYmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw&#34;&gt;空间复杂度&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;那么，O (1) , O ( n ) , O ( l o g n ) , O ( n l o g n ) 就可以看作既可表示算法复杂度，也可以表示空间复杂度。&lt;/p&gt;
&lt;p&gt;大 O 加上（）的形式，里面其实包裹的是一个函数 f () , O （ f () ） f (),O（f ()）f (),O（f ()）, 指明某个算法的耗时 / 耗空间与数据增长量之间的关系。其中的 n  代表输入数据的量。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200415110541459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTY5Nzc3NA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 ax=N（a&amp;gt;0，且 a≠1），那么数 x 叫做以 a 为底 N 的对数，记作 x=logaN，读作以 a 为底 N 的对数，其中 a 叫做对数的底数，N 叫做真数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200415110548576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTY5Nzc3NA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
比如线段树复杂度 O (l o g n + n) ，查询修改都是 O ( l o g n ) &lt;strong&gt;刚学的时候简直惊为天人&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;=n;++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; j=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;j&amp;lt;=i;++j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; k=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;k&amp;lt;=j;++k)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                x=x+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1234&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTYlOTclQjYlRTklOTclQjQlRTUlQTQlOEQlRTYlOUQlODIlRTUlQkElQTYmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw&#34;&gt;时间复杂度&lt;/span&gt;是 O (n^3)&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(i&amp;lt;=n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i*=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1234&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;时间复杂度 O (l o g 2 n)−&amp;gt;O ( l o g n )&lt;br&gt;
 评测机一般能过 10&lt;sup&gt;8~10&lt;/sup&gt;9 ，根据评测机的性能以及程序的常数而定&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
